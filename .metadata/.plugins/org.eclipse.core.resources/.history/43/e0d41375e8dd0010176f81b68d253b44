package tk.jcyfkimi.UI;

import tk.jcyfkimi.R;
import tk.jcyfkimi.util.EmailRegex;
import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;

/**
 * 
 * 注册界面，用户名，密码，邮箱，买家卖家 注册成功后自动跳转到相应的界面
 * 
 */
public class RegisterActivity extends Activity {

	private EditText editName = null;
	private EditText editPass = null;
	private EditText editPasscfm = null;
	private EditText editEmail = null;
	private RadioGroup rdoGroup = null;
	private RadioButton rdobuy = null;
	private RadioButton rdosale = null;
	private Button regBtn = null;
	private Button regReset = null;

	private void findViews() {
		editName = (EditText) findViewById(R.id.regname);
		editPass = (EditText) findViewById(R.id.regpass);
		editPasscfm = (EditText) findViewById(R.id.regpasscfm);
		editEmail = (EditText) findViewById(R.id.regemail);
		rdoGroup = (RadioGroup) findViewById(R.id.rdogtype);
		rdobuy = (RadioButton) findViewById(R.id.ubtype);
		rdosale = (RadioButton) findViewById(R.id.ustype);
		regBtn = (Button) findViewById(R.id.btnreg);
		regReset = (Button) findViewById(R.id.btnreset);

	}

	private void setListener() {
		regBtn.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				System.out.println("regbtn");
				// 以下为对空值的判断
				if (editName.getText().length() == 0) {
					showWithToast("用户名不能为空");
					return;
				} else if (editPass.getText().length() == 0) {
					showWithToast("密码不能为空");
					return;

				} else if (editPasscfm.getText().length() == 0) {
					showWithToast("确认密码不能为空");
					return;
				} else if (editEmail.getText().length() == 0) {
					showWithToast("email不能为空");
					return;
				}
				// 对密码和邮箱进行验证
				if (!editPass.getText().toString().equals(
						editPasscfm.getText().toString())) {
					showWithToast("两次输入的密码不一致");
					return;
				} else if(!EmailRegex.mailRegex(editEmail.getText().toString())){
					showWithToast("邮箱非法");
					return ;
				}
				//与服务器进行交互，插入数据
				showWithToast("注册成功");
			
			}
		});
	}

	public void showWithToast(String str) {
		Toast.makeText(RegisterActivity.this, str, Toast.LENGTH_SHORT).show();
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.reg);
		findViews();
		setListener();
	}

}
