package tk.jcyfkimi.http;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * 实现各类和服务器交互的功能
 * 
 * @author Administrator
 * 
 */
public class HttpHelper {

	private StringBuffer sb = new StringBuffer();
	
	private HttpClient httpClient;
	private HttpPost httpRequest;
	private HttpResponse response;

	/**
	 * 注册账号
	 * @param jsonstr
	 * @return
	 */
	public boolean register(String jsonstr){
		String message = null;
		String url = "http://10.0.2.2:8080/TaoTaoServer/register";
		httpRequest = new HttpPost(url);
		try {
			StringEntity se = new StringEntity(jsonstr);
			httpRequest.setEntity(se);
			response = new DefaultHttpClient().execute(httpRequest);
			if(response.getStatusLine().getStatusCode() == 200){
				System.out.println("reg ok");
				if (response.getStatusLine().getStatusCode() == 200) {
					BufferedReader bufferedReader2 = new BufferedReader(
							new InputStreamReader(response.getEntity().getContent()));
					for (String s = bufferedReader2.readLine(); s != null; s = bufferedReader2
							.readLine()) {
						sb.append(s);
					}
				}
				JSONObject jsonObj = new JSONObject(sb.toString());
				System.out.println(sb.toString());
				message = jsonObj.getString("message")!=null?jsonObj.getString("message"):"网络连接异常！";
				if(message.equals("success")){
					//System.out.println(message);
					return true;
				}
			}
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	

	/**
	 * 检查登陆，发送一个json的字符串到服务器
	 * 
	 * @param jsonstr
	 * @return
	 */
	public boolean checkLogin(String jsonstr) {
		String message = null;
		String url = "http://10.0.2.2:8080/TaoTaoServer/login";
		System.out.println(url);
		httpRequest = new HttpPost(url);
		try {
			StringEntity se = new StringEntity(jsonstr);
			httpRequest.setEntity(se);
			response = new DefaultHttpClient().execute(httpRequest);
			if (response.getStatusLine().getStatusCode() == 200) {
				BufferedReader bufferedReader2 = new BufferedReader(
						new InputStreamReader(response.getEntity().getContent()));
				for (String s = bufferedReader2.readLine(); s != null; s = bufferedReader2
						.readLine()) {
					sb.append(s);
				}
			}
			JSONObject jsonObj = new JSONObject(sb.toString());
			//System.out.println(sb.toString());
			message = jsonObj.getString("message")!=null?jsonObj.getString("message"):"网络连接异常！";
			if(message.equals("success")){
				//System.out.println(message);
				return true;
			}
			
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}

	private JSONObject sendToServer(String url,String jsonstr){
		httpRequest = new HttpPost(url);
			StringEntity se = new StringEntity(jsonstr);
			httpRequest.setEntity(se);
			response = new DefaultHttpClient().execute(httpRequest);
			if (response.getStatusLine().getStatusCode() == 200) {
				BufferedReader bufferedReader2 = new BufferedReader(
						new InputStreamReader(response.getEntity().getContent()));
				for (String s = bufferedReader2.readLine(); s != null; s = bufferedReader2
						.readLine()) {
					sb.append(s);
				}
			}
			JSONObject jsonObj = new JSONObject(sb.toString());
	}
	
}
